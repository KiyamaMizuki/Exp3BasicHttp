そもそもheaderとはhttp通信をする時の情報を含み、ユーザーエージェント名、リファラ、更新されていたら（If-Modified-Since）／同じでなければ（If-None-Match）、クッキーの四つの情報が含まれる。
またそれらはリクエスト、レスポンス、エンティティheaderに分類される。
今回はset-cookieというレスポンスヘッダを紹介する。HTTP のレスポンスヘッダーで、サーバーからユーザーエージェントへクッキーを送信するために使用され、ユーザーエージェントはそれを後でサーバーに送り返すことができる。

cookieについて
Cookieとは初回アクセス時にwebサーバーから発行される個体識別のための情報でありユーザーのブラウザに保存される。例えばショッピングサイトで買い物をし次回アクセス時にパスワードが要らないのもcookieのおかげ。また買い物をして再ログインした際にカートの中身が保存されているのもcookieのおかげです。cookieはユーザーを認証する目的以外にもユーザー情報を保存する役割があります。

 CookieとSessionIDの違い
 Cookieは上で説明した通りwebサーバーから発行されるユーザーの識別情報でSessionは通信の開始から終了までのことを指す。クライアントからサーバーへ接続した時点でセッションが始まり、サーバーから切断するとセッションが終了する。ここでアクセスしているユーザーの識別や処理の状態を管理するために必要になるのがSessionID。一般的にSessionIDはcookieに保存してやりとりをするのが普通でSessionは通信が終了したら消えるので勿論SessionIDも消えてしまう。

SessionIDの管理方法
Cookieによる管理方法とhiddenフィールドによる管理方法

 Cookieの管理方法
SSLで暗号化し情報を抜き取られない様にする。ここでsecure 属性をつけることでHTTPS の通信時のみクッキーを送信する。逆になかったらHTTPS の時に作った Cookie が HTTP の時に見ることができてしまう。
Cookieを利用したSessionの管理方法以外のSessionの管理方法
Hiddenフィールドを利用、ブラウザ画面上に表示されないHTMLフォーム上の項目でECサイトなどでIDやパスワードを隠すために使わます。
また，携帯電話向けのECサイトではCookieが利用できないため，ユーザーのセッション管理用としてHIDDENフィールドに，そのユーザーを特定する情報を記述しておくことがあります。